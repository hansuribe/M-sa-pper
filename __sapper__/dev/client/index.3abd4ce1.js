import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, o as onDestroy, e as element, a as space, t as text, c as claim_element, b as children, f as detach_dev, g as claim_space, h as claim_text, j as attr_dev, k as set_style, l as add_location, m as insert_dev, n as append_dev, p as set_data_dev, q as noop, r as add_render_callback, u as validate_each_argument, w as create_component, x as query_selector_all, y as claim_component, z as mount_component, A as listen_dev, B as transition_in, C as transition_out, D as destroy_component, E as destroy_each } from './client.5b977fce.js';
import { N as Navbar, T as Tabbar } from './Tabbar.a72449a7.js';
import { u as username } from './stores.e0f88104.js';

/* src/components/SteamGuard.svelte generated by Svelte v3.22.2 */
const file = "src/components/SteamGuard.svelte";

function create_fragment(ctx) {
	let div3;
	let div0;
	let t0;
	let div1;
	let t1;
	let t2;
	let div2;
	let t3;

	const block = {
		c: function create() {
			div3 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = text(/*code*/ ctx[0]);
			t2 = space();
			div2 = element("div");
			t3 = text(/*username_value*/ ctx[2]);
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { id: true, style: true, class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div3_nodes);
			div1 = claim_element(div3_nodes, "DIV", { id: true, style: true, class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, /*code*/ ctx[0]);
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			t3 = claim_text(div2_nodes, /*username_value*/ ctx[2]);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "timerbar");
			set_style(div0, "width", 100 - /*percentage*/ ctx[1] * 10 + "%");

			set_style(div0, "background-image", /*percentage*/ ctx[1] >= 7
			? "linear-gradient(145deg, rgba(173,40,33,1) 0%, rgba(173,40,33,1) 100%)"
			: "linear-gradient(145deg, rgba(0,0,255,1) 0%, rgba(163,68,201,1) 100%)");

			attr_dev(div0, "class", "svelte-1i0y5o3");
			add_location(div0, file, 38, 1, 652);
			attr_dev(div1, "id", "code");
			set_style(div1, "color", /*percentage*/ ctx[1] >= 7 ? "#AD2821" : "white");
			attr_dev(div1, "class", "svelte-1i0y5o3");
			add_location(div1, file, 39, 1, 901);
			attr_dev(div2, "id", "username");
			attr_dev(div2, "class", "svelte-1i0y5o3");
			add_location(div2, file, 40, 1, 984);
			attr_dev(div3, "id", "wrapper");
			attr_dev(div3, "class", "svelte-1i0y5o3");
			add_location(div3, file, 37, 0, 632);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div0);
			append_dev(div3, t0);
			append_dev(div3, div1);
			append_dev(div1, t1);
			append_dev(div3, t2);
			append_dev(div3, div2);
			append_dev(div2, t3);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*percentage*/ 2) {
				set_style(div0, "width", 100 - /*percentage*/ ctx[1] * 10 + "%");
			}

			if (dirty & /*percentage*/ 2) {
				set_style(div0, "background-image", /*percentage*/ ctx[1] >= 7
				? "linear-gradient(145deg, rgba(173,40,33,1) 0%, rgba(173,40,33,1) 100%)"
				: "linear-gradient(145deg, rgba(0,0,255,1) 0%, rgba(163,68,201,1) 100%)");
			}

			if (dirty & /*code*/ 1) set_data_dev(t1, /*code*/ ctx[0]);

			if (dirty & /*percentage*/ 2) {
				set_style(div1, "color", /*percentage*/ ctx[1] >= 7 ? "#AD2821" : "white");
			}

			if (dirty & /*username_value*/ 4) set_data_dev(t3, /*username_value*/ ctx[2]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let code = 72826;
	let percentage = 0;

	function onInterval(callback, time) {
		const interval = setInterval(callback, time);

		onDestroy(() => {
			clearInterval(interval);
		});
	}

	

	function codegen() {
		$$invalidate(0, code = Math.random().toString(36).slice(-5).toUpperCase());
	}

	onInterval(
		function check() {
			if (percentage < 9) {
				$$invalidate(1, ++percentage);
			} else {
				$$invalidate(1, percentage = 0);
				codegen();
			}
		},
		1000
	);

	let username_value;

	const unsubscribe = username.subscribe(value => {
		$$invalidate(2, username_value = value);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SteamGuard> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("SteamGuard", $$slots, []);

	$$self.$capture_state = () => ({
		onDestroy,
		username,
		code,
		percentage,
		onInterval,
		codegen,
		username_value,
		unsubscribe
	});

	$$self.$inject_state = $$props => {
		if ("code" in $$props) $$invalidate(0, code = $$props.code);
		if ("percentage" in $$props) $$invalidate(1, percentage = $$props.percentage);
		if ("username_value" in $$props) $$invalidate(2, username_value = $$props.username_value);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [code, percentage, username_value];
}

class SteamGuard extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SteamGuard",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.22.2 */
const file$1 = "src/routes/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (18:1) {#each [0, 1, 2, 3, 4, 5, 6, 7, 8] as layer}
function create_each_block(ctx) {
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", {
				style: true,
				src: true,
				alt: true,
				class: true
			});

			this.h();
		},
		h: function hydrate() {
			set_style(img, "transform", "translate(0," + -/*y*/ ctx[0] * /*layer*/ ctx[3] / (/*layers*/ ctx[1].length - 1) + "px)");
			if (img.src !== (img_src_value = "https://www.firewatchgame.com/images/parallax/parallax" + /*layer*/ ctx[3] + ".png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = "parallax layer " + /*layer*/ ctx[3]);
			attr_dev(img, "class", "svelte-4orkej");
			add_location(img, file$1, 18, 2, 469);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*y*/ 1) {
				set_style(img, "transform", "translate(0," + -/*y*/ ctx[0] * /*layer*/ ctx[3] / (/*layers*/ ctx[1].length - 1) + "px)");
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(18:1) {#each [0, 1, 2, 3, 4, 5, 6, 7, 8] as layer}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let scrolling = false;

	let clear_scrolling = () => {
		scrolling = false;
	};

	let scrolling_timeout;
	let t0;
	let t1;
	let div2;
	let a;
	let t2;
	let div1;
	let span;
	let t3;
	let t4;
	let div0;
	let t5;
	let t6;
	let t7;
	let t8;
	let t9;
	let current;
	let dispose;
	add_render_callback(/*onwindowscroll*/ ctx[2]);

	const navbar = new Navbar({
			props: { title: "Steam Guard" },
			$$inline: true
		});

	let each_value = [0, 1, 2, 3, 4, 5, 6, 7, 8];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < 9; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const steamguard = new SteamGuard({ $$inline: true });
	const tabbar = new Tabbar({ props: { location: 3 }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			create_component(navbar.$$.fragment);
			t1 = space();
			div2 = element("div");
			a = element("a");

			for (let i = 0; i < 9; i += 1) {
				each_blocks[i].c();
			}

			t2 = space();
			div1 = element("div");
			span = element("span");
			t3 = text("scroll down");
			t4 = space();
			div0 = element("div");
			t5 = text("You have scrolled ");
			t6 = text(/*y*/ ctx[0]);
			t7 = text(" pixels");
			t8 = space();
			create_component(steamguard.$$.fragment);
			t9 = space();
			create_component(tabbar.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-uh0s2l\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(navbar.$$.fragment, nodes);
			t1 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			a = claim_element(div2_nodes, "A", { class: true, href: true });
			var a_nodes = children(a);

			for (let i = 0; i < 9; i += 1) {
				each_blocks[i].l(a_nodes);
			}

			a_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span = claim_element(div1_nodes, "SPAN", { style: true, class: true });
			var span_nodes = children(span);
			t3 = claim_text(span_nodes, "scroll down");
			span_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t5 = claim_text(div0_nodes, "You have scrolled ");
			t6 = claim_text(div0_nodes, /*y*/ ctx[0]);
			t7 = claim_text(div0_nodes, " pixels");
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			claim_component(steamguard.$$.fragment, div2_nodes);
			div2_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			claim_component(tabbar.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Guard :: Steam Mobile";
			attr_dev(a, "class", "parallax-container svelte-4orkej");
			attr_dev(a, "href", "https://www.firewatchgame.com");
			add_location(a, file$1, 16, 1, 353);
			set_style(span, "opacity", 1 - Math.max(0, /*y*/ ctx[0] / 40));
			attr_dev(span, "class", "svelte-4orkej");
			add_location(span, file$1, 27, 1, 692);
			attr_dev(div0, "class", "foreground svelte-4orkej");
			add_location(div0, file$1, 31, 1, 767);
			attr_dev(div1, "class", "text svelte-4orkej");
			add_location(div1, file$1, 26, 0, 672);
			attr_dev(div2, "id", "guard");
			attr_dev(div2, "class", "svelte-4orkej");
			add_location(div2, file$1, 15, 0, 335);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, t0, anchor);
			mount_component(navbar, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, a);

			for (let i = 0; i < 9; i += 1) {
				each_blocks[i].m(a, null);
			}

			append_dev(div2, t2);
			append_dev(div2, div1);
			append_dev(div1, span);
			append_dev(span, t3);
			append_dev(div1, t4);
			append_dev(div1, div0);
			append_dev(div0, t5);
			append_dev(div0, t6);
			append_dev(div0, t7);
			append_dev(div2, t8);
			mount_component(steamguard, div2, null);
			insert_dev(target, t9, anchor);
			mount_component(tabbar, target, anchor);
			current = true;
			if (remount) dispose();

			dispose = listen_dev(window, "scroll", () => {
				scrolling = true;
				clearTimeout(scrolling_timeout);
				scrolling_timeout = setTimeout(clear_scrolling, 100);
				/*onwindowscroll*/ ctx[2]();
			});
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*y*/ 1 && !scrolling) {
				scrolling = true;
				clearTimeout(scrolling_timeout);
				scrollTo(window.pageXOffset, /*y*/ ctx[0]);
				scrolling_timeout = setTimeout(clear_scrolling, 100);
			}

			if (dirty & /*y, layers*/ 3) {
				each_value = [0, 1, 2, 3, 4, 5, 6, 7, 8];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < 9; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(a, null);
					}
				}

				for (; i < 9; i += 1) {
					each_blocks[i].d(1);
				}
			}

			if (!current || dirty & /*y*/ 1) {
				set_style(span, "opacity", 1 - Math.max(0, /*y*/ ctx[0] / 40));
			}

			if (!current || dirty & /*y*/ 1) set_data_dev(t6, /*y*/ ctx[0]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(navbar.$$.fragment, local);
			transition_in(steamguard.$$.fragment, local);
			transition_in(tabbar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(navbar.$$.fragment, local);
			transition_out(steamguard.$$.fragment, local);
			transition_out(tabbar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(navbar, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div2);
			destroy_each(each_blocks, detaching);
			destroy_component(steamguard);
			if (detaching) detach_dev(t9);
			destroy_component(tabbar, detaching);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	const layers = [0, 1, 2, 3, 4, 5, 6, 7, 8];
	let y;
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	function onwindowscroll() {
		$$invalidate(0, y = window.pageYOffset);
	}

	$$self.$capture_state = () => ({ Navbar, Tabbar, SteamGuard, layers, y });

	$$self.$inject_state = $$props => {
		if ("y" in $$props) $$invalidate(0, y = $$props.y);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [y, layers, onwindowscroll];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguM2FiZDRjZTEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1N0ZWFtR3VhcmQuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL3JvdXRlcy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IHsgdXNlcm5hbWUgfSBmcm9tICcuLi9yb3V0ZXMvc3RvcmVzLmpzJztcblxuXHRsZXQgY29kZSA9IDcyODI2O1xuXHRsZXQgcGVyY2VudGFnZSA9IDA7XG5cblx0ZnVuY3Rpb24gb25JbnRlcnZhbChjYWxsYmFjaywgdGltZSkge1xuXHRcdGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoY2FsbGJhY2ssIHRpbWUpO1xuXG5cdFx0b25EZXN0cm95KCgpID0+IHtcblx0XHRjbGVhckludGVydmFsKGludGVydmFsKTtcblx0XHR9KTtcblx0fTtcblxuXHRmdW5jdGlvbiBjb2RlZ2VuKCkge1xuXHRcdGNvZGUgPSAoIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKC01KSApLnRvVXBwZXJDYXNlKCk7XG5cdH1cblx0XG5cdG9uSW50ZXJ2YWwoXG5cdFx0ZnVuY3Rpb24gY2hlY2soKXtcblx0XHRcdGlmIChwZXJjZW50YWdlIDwgOSl7XG5cdFx0XHRcdCsrcGVyY2VudGFnZTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHBlcmNlbnRhZ2UgPSAwO1xuXHRcdFx0XHRjb2RlZ2VuKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHQsIDEwMDApO1xuXG5cdGxldCB1c2VybmFtZV92YWx1ZTtcblxuXHRjb25zdCB1bnN1YnNjcmliZSA9IHVzZXJuYW1lLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG5cdFx0dXNlcm5hbWVfdmFsdWUgPSB2YWx1ZTtcblx0fSk7XG5cbjwvc2NyaXB0PlxuPGRpdiBpZD1cIndyYXBwZXJcIj5cblx0PGRpdiBpZD1cInRpbWVyYmFyXCIgc3R5bGU9XCJ3aWR0aDogezEwMCAtIHBlcmNlbnRhZ2UqMTB9JTsgYmFja2dyb3VuZC1pbWFnZToge3BlcmNlbnRhZ2UgPj03ID8gJ2xpbmVhci1ncmFkaWVudCgxNDVkZWcsIHJnYmEoMTczLDQwLDMzLDEpIDAlLCByZ2JhKDE3Myw0MCwzMywxKSAxMDAlKScgOiAnbGluZWFyLWdyYWRpZW50KDE0NWRlZywgcmdiYSgwLDAsMjU1LDEpIDAlLCByZ2JhKDE2Myw2OCwyMDEsMSkgMTAwJSknfTtcIj48L2Rpdj5cblx0PGRpdiBpZD1cImNvZGVcIiBzdHlsZT1cImNvbG9yOiB7cGVyY2VudGFnZSA+PTcgPyAnI0FEMjgyMScgOiAnd2hpdGUnfVwiPntjb2RlfTwvZGl2PlxuXHQ8ZGl2IGlkPVwidXNlcm5hbWVcIj57dXNlcm5hbWVfdmFsdWV9PC9kaXY+XG48L2Rpdj5cbjxzdHlsZT5cblx0I3dyYXBwZXJ7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGhlaWdodDogMTkwcHg7XG5cdFx0cGFkZGluZy10b3A6IDQwcHg7XG5cdH1cblxuXHQjY29kZSB7XG5cdFx0Zm9udC1zaXplOiA1MnB4O1xuXHRcdGZvbnQtd2VpZ2h0OiA0MDA7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdGxldHRlci1zcGFjaW5nOiA0cHg7XG5cdFx0dHJhbnNpdGlvbjogMC41cztcblx0fVxuXG5cdCN1c2VybmFtZSB7XG5cdFx0Y29sb3I6ICNhN2Q2ZjA7XG5cdFx0Zm9udC1zaXplOiAxNHB4O1xuXHRcdG9wYWNpdHk6IDAuODtcblx0fVxuXG5cdCN0aW1lcmJhciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDhweDtcbiAgICB0b3A6IDkwcHg7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xuICAgIHRyYW5zaXRpb246IDAuNXM7XG5cdH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgTmF2YmFyIGZyb20gJy4uL2NvbXBvbmVudHMvTmF2YmFyLnN2ZWx0ZSc7XG5cdGltcG9ydCBUYWJiYXIgZnJvbSAnLi4vY29tcG9uZW50cy9UYWJiYXIuc3ZlbHRlJztcblx0aW1wb3J0IFN0ZWFtR3VhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9TdGVhbUd1YXJkLnN2ZWx0ZSc7XG5cblx0Y29uc3QgbGF5ZXJzID0gWzAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDhdO1xuXG5cdGxldCB5O1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkd1YXJkIDo6IFN0ZWFtIE1vYmlsZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48TmF2YmFyIHRpdGxlPVwiU3RlYW0gR3VhcmRcIiAvPlxuPGRpdiBpZD1cImd1YXJkXCI+XG5cdDxhIGNsYXNzPVwicGFyYWxsYXgtY29udGFpbmVyXCIgaHJlZj1cImh0dHBzOi8vd3d3LmZpcmV3YXRjaGdhbWUuY29tXCI+XG5cdHsjZWFjaCBbMCwgMSwgMiwgMywgNCwgNSwgNiwgNywgOF0gYXMgbGF5ZXJ9XG5cdFx0PGltZ1xuXHRcdFx0c3R5bGU9XCJ0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLHsteSAqIGxheWVyIC8gKGxheWVycy5sZW5ndGggLSAxKX1weClcIlxuXHRcdFx0c3JjPVwiaHR0cHM6Ly93d3cuZmlyZXdhdGNoZ2FtZS5jb20vaW1hZ2VzL3BhcmFsbGF4L3BhcmFsbGF4e2xheWVyfS5wbmdcIlxuXHRcdFx0YWx0PVwicGFyYWxsYXggbGF5ZXIge2xheWVyfVwiXG5cdFx0PlxuXHR7L2VhY2h9XG48L2E+XG5cbjxkaXYgY2xhc3M9XCJ0ZXh0XCI+XG5cdDxzcGFuIHN0eWxlPVwib3BhY2l0eTogezEgLSBNYXRoLm1heCgwLCB5IC8gNDApfVwiPlxuXHRcdHNjcm9sbCBkb3duXG5cdDwvc3Bhbj5cblxuXHQ8ZGl2IGNsYXNzPVwiZm9yZWdyb3VuZFwiPlxuXHRcdFlvdSBoYXZlIHNjcm9sbGVkIHt5fSBwaXhlbHNcblx0PC9kaXY+XG48L2Rpdj5cblx0PFN0ZWFtR3VhcmQgLz5cbjwvZGl2PlxuPHN2ZWx0ZTp3aW5kb3cgYmluZDpzY3JvbGxZPXt5fS8+XG48VGFiYmFyIGxvY2F0aW9uPXszfSAvPlxuXG48c3R5bGU+XG5cdCNndWFyZCB7XG5cdFx0cGFkZGluZzogNjBweCAwcHg7XG5cdFx0cGFkZGluZy1ib3R0b206IDYwcHg7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR9XG5cblx0cGFyYWxsYXgtY29udGFpbmVyIHtcblx0XHRwb3NpdGlvbjogZml4ZWQ7XG5cdFx0d2lkdGg6IDI0MDBweDtcblx0XHRoZWlnaHQ6IDcxMnB4O1xuXHRcdGxlZnQ6IDUwJTtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLDApO1xuXHR9XG5cblx0LnBhcmFsbGF4LWNvbnRhaW5lciBpbWcge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHR0b3A6IDkwcHg7XG5cdFx0bGVmdDogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuXHR9XG5cblx0LnBhcmFsbGF4LWNvbnRhaW5lciBpbWc6bGFzdC1jaGlsZDo6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6ICcnO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0YmFja2dyb3VuZDogcmdiKDQ1LDEwLDEzKTtcblx0fVxuXG5cdC50ZXh0IHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiAzMDB2aDtcblx0XHRjb2xvcjogcmdiKDIyMCwxMTMsNDMpO1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRwYWRkaW5nOiA0ZW0gMC41ZW0gMC41ZW0gMC41ZW07XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0fVxuXG5cdHNwYW4ge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGZvbnQtc2l6ZTogMWVtO1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0d2lsbC1jaGFuZ2U6IHRyYW5zZm9ybSwgb3BhY2l0eTtcblx0fVxuXG5cdC5mb3JlZ3JvdW5kIHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiA3MTFweDtcblx0XHRsZWZ0OiAwO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGhlaWdodDogY2FsYygxMDAlIC0gNzEycHgpO1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHJnYigzMiwwLDEpO1xuXHRcdGNvbG9yOiB3aGl0ZTtcblx0XHRwYWRkaW5nOiA1MHZoIDAgMCAwO1xuXHR9XG5cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0JBdUN1RSxHQUFJOzs7Z0NBQ3RELEdBQWM7Ozs7Ozs7Ozs7O3dDQURvQyxHQUFJOzs7OztrREFDdEQsR0FBYzs7Ozs7Ozs0QkFGQSxHQUFHLGtCQUFHLEdBQVUsTUFBQyxFQUFFOztzREFBdUIsR0FBVSxPQUFHLENBQUM7S0FBRyx1RUFBdUU7S0FBRyxzRUFBc0U7Ozs7OzJDQUMvTSxHQUFVLE9BQUcsQ0FBQyxHQUFHLFNBQVMsR0FBRyxPQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQURoQyxHQUFHLGtCQUFHLEdBQVUsTUFBQyxFQUFFOzs7O3VEQUF1QixHQUFVLE9BQUcsQ0FBQztNQUFHLHVFQUF1RTtNQUFHLHNFQUFzRTs7O3FEQUN2SyxHQUFJOzs7NENBQTVDLEdBQVUsT0FBRyxDQUFDLEdBQUcsU0FBUyxHQUFHLE9BQU87Ozt5RUFDOUMsR0FBYzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBcEM5QixJQUFJLEdBQUcsS0FBSztLQUNaLFVBQVUsR0FBRyxDQUFDOztVQUVULFVBQVUsQ0FBQyxRQUFRLEVBQUUsSUFBSTtRQUMzQixRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxJQUFJOztFQUUzQyxTQUFTO0dBQ1QsYUFBYSxDQUFDLFFBQVE7Ozs7OztVQUlkLE9BQU87a0JBQ2YsSUFBSSxHQUFLLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFJLFdBQVc7OztDQUc1RCxVQUFVO1dBQ0EsS0FBSztPQUNULFVBQVUsR0FBRyxDQUFDO3NCQUNmLFVBQVU7O29CQUVaLFVBQVUsR0FBRyxDQUFDO0lBQ2QsT0FBTzs7O0VBR1IsSUFBSTs7O0tBRUYsY0FBYzs7T0FFWixXQUFXLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxLQUFLO2tCQUMzQyxjQUFjLEdBQUcsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VEQ2RXLEdBQUMsZ0JBQUcsR0FBSyxrQkFBSSxHQUFNLElBQUMsTUFBTSxHQUFHLENBQUM7eUdBQ0YsR0FBSztzRUFDNUMsR0FBSzs7Ozs7Ozs7O3dEQUZNLEdBQUMsZ0JBQUcsR0FBSyxrQkFBSSxHQUFNLElBQUMsTUFBTSxHQUFHLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQkFGeEQsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDOzs7Ozs7Ozs7Z0RBcUJoQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUJBTkUsR0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUNBQUQsR0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFMRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQUUsR0FBQyxNQUFHLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQkFWckMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQVVWLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBRSxHQUFDLE1BQUcsRUFBRTs7OzJEQUt6QixHQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BM0JmLE1BQU0sSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7S0FFckMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
