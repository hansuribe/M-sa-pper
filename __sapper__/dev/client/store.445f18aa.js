import {
  S as SvelteComponentDev,
  i as init,
  s as safe_not_equal,
  d as dispatch_dev,
  v as validate_slots,
  e as element,
  t as text,
  a as space,
  c as claim_element,
  b as children,
  h as claim_text,
  f as detach_dev,
  g as claim_space,
  j as attr_dev,
  D as null_to_empty,
  l as add_location,
  m as insert_dev,
  n as append_dev,
  o as set_data_dev,
  p as noop,
  k as set_style,
  q as create_component,
  u as claim_component,
  w as mount_component,
  x as transition_in,
  y as transition_out,
  z as destroy_component,
  K as group_outros,
  L as check_outros,
  r as query_selector_all,
} from './client.7d85ea37.js'
import { N as Navbar, T as Tabbar } from './Tabbar.30c2059b.js'

/* src/components/PriceBox.svelte generated by Svelte v3.22.2 */

const file = 'src/components/PriceBox.svelte'

function create_fragment(ctx) {
  let div4
  let div0
  let t0
  let t1
  let t2
  let div0_class_value
  let t3
  let div3
  let div1
  let t4
  let t5
  let div1_class_value
  let t6
  let div2
  let t7
  let t8
  let div2_class_value
  let div3_class_value

  const block = {
    c: function create() {
      div4 = element('div')
      div0 = element('div')
      t0 = text('-')
      t1 = text(/*discount*/ ctx[3])
      t2 = text('%')
      t3 = space()
      div3 = element('div')
      div1 = element('div')
      t4 = text('$')
      t5 = text(/*originalPrice*/ ctx[0])
      t6 = space()
      div2 = element('div')
      t7 = text('$')
      t8 = text(/*reducedPrice*/ ctx[1])
      this.h()
    },
    l: function claim(nodes) {
      div4 = claim_element(nodes, 'DIV', { id: true, class: true })
      var div4_nodes = children(div4)
      div0 = claim_element(div4_nodes, 'DIV', { id: true, class: true })
      var div0_nodes = children(div0)
      t0 = claim_text(div0_nodes, '-')
      t1 = claim_text(div0_nodes, /*discount*/ ctx[3])
      t2 = claim_text(div0_nodes, '%')
      div0_nodes.forEach(detach_dev)
      t3 = claim_space(div4_nodes)
      div3 = claim_element(div4_nodes, 'DIV', { id: true, class: true })
      var div3_nodes = children(div3)
      div1 = claim_element(div3_nodes, 'DIV', { id: true, class: true })
      var div1_nodes = children(div1)
      t4 = claim_text(div1_nodes, '$')
      t5 = claim_text(div1_nodes, /*originalPrice*/ ctx[0])
      div1_nodes.forEach(detach_dev)
      t6 = claim_space(div3_nodes)
      div2 = claim_element(div3_nodes, 'DIV', { id: true, class: true })
      var div2_nodes = children(div2)
      t7 = claim_text(div2_nodes, '$')
      t8 = claim_text(div2_nodes, /*reducedPrice*/ ctx[1])
      div2_nodes.forEach(detach_dev)
      div3_nodes.forEach(detach_dev)
      div4_nodes.forEach(detach_dev)
      this.h()
    },
    h: function hydrate() {
      attr_dev(div0, 'id', 'discount')
      attr_dev(
        div0,
        'class',
        (div0_class_value =
          '' +
          (null_to_empty(/*small*/ ctx[2] ? 'discount discount--square' : '') +
            ' svelte-nwzu5p'))
      )
      add_location(div0, file, 11, 2, 203)
      attr_dev(div1, 'id', 'originalprice')
      attr_dev(
        div1,
        'class',
        (div1_class_value =
          '' +
          (null_to_empty(/*small*/ ctx[2] ? 'originalprice--square' : '') +
            ' svelte-nwzu5p'))
      )
      add_location(div1, file, 15, 4, 367)
      attr_dev(div2, 'id', 'reducedprice')
      attr_dev(
        div2,
        'class',
        (div2_class_value =
          '' +
          (null_to_empty(/*small*/ ctx[2] ? 'reducedprice--square' : '') +
            ' svelte-nwzu5p'))
      )
      add_location(div2, file, 18, 4, 475)
      attr_dev(div3, 'id', 'prices')
      attr_dev(
        div3,
        'class',
        (div3_class_value =
          '' +
          (null_to_empty(/*small*/ ctx[2] ? 'prices prices--square' : '') +
            ' svelte-nwzu5p'))
      )
      add_location(div3, file, 14, 2, 300)
      attr_dev(div4, 'id', 'pricebox')
      attr_dev(div4, 'class', 'svelte-nwzu5p')
      add_location(div4, file, 10, 0, 181)
    },
    m: function mount(target, anchor) {
      insert_dev(target, div4, anchor)
      append_dev(div4, div0)
      append_dev(div0, t0)
      append_dev(div0, t1)
      append_dev(div0, t2)
      append_dev(div4, t3)
      append_dev(div4, div3)
      append_dev(div3, div1)
      append_dev(div1, t4)
      append_dev(div1, t5)
      append_dev(div3, t6)
      append_dev(div3, div2)
      append_dev(div2, t7)
      append_dev(div2, t8)
    },
    p: function update(ctx, [dirty]) {
      if (
        dirty & /*small*/ 4 &&
        div0_class_value !==
          (div0_class_value =
            '' +
            (null_to_empty(
              /*small*/ ctx[2] ? 'discount discount--square' : ''
            ) +
              ' svelte-nwzu5p'))
      ) {
        attr_dev(div0, 'class', div0_class_value)
      }

      if (dirty & /*originalPrice*/ 1)
        set_data_dev(t5, /*originalPrice*/ ctx[0])

      if (
        dirty & /*small*/ 4 &&
        div1_class_value !==
          (div1_class_value =
            '' +
            (null_to_empty(/*small*/ ctx[2] ? 'originalprice--square' : '') +
              ' svelte-nwzu5p'))
      ) {
        attr_dev(div1, 'class', div1_class_value)
      }

      if (dirty & /*reducedPrice*/ 2) set_data_dev(t8, /*reducedPrice*/ ctx[1])

      if (
        dirty & /*small*/ 4 &&
        div2_class_value !==
          (div2_class_value =
            '' +
            (null_to_empty(/*small*/ ctx[2] ? 'reducedprice--square' : '') +
              ' svelte-nwzu5p'))
      ) {
        attr_dev(div2, 'class', div2_class_value)
      }

      if (
        dirty & /*small*/ 4 &&
        div3_class_value !==
          (div3_class_value =
            '' +
            (null_to_empty(/*small*/ ctx[2] ? 'prices prices--square' : '') +
              ' svelte-nwzu5p'))
      ) {
        attr_dev(div3, 'class', div3_class_value)
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(div4)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance($$self, $$props, $$invalidate) {
  let { originalPrice } = $$props,
    { reducedPrice } = $$props,
    { small = false } = $$props

  let discount = (
    ((originalPrice - reducedPrice) * 100) /
    originalPrice
  ).toFixed(0)
  const writable_props = ['originalPrice', 'reducedPrice', 'small']

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<PriceBox> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('PriceBox', $$slots, [])

  $$self.$set = ($$props) => {
    if ('originalPrice' in $$props)
      $$invalidate(0, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(1, (reducedPrice = $$props.reducedPrice))
    if ('small' in $$props) $$invalidate(2, (small = $$props.small))
  }

  $$self.$capture_state = () => ({
    originalPrice,
    reducedPrice,
    small,
    discount,
  })

  $$self.$inject_state = ($$props) => {
    if ('originalPrice' in $$props)
      $$invalidate(0, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(1, (reducedPrice = $$props.reducedPrice))
    if ('small' in $$props) $$invalidate(2, (small = $$props.small))
    if ('discount' in $$props) $$invalidate(3, (discount = $$props.discount))
  }

  if ($$props && '$$inject' in $$props) {
    $$self.$inject_state($$props.$$inject)
  }

  return [originalPrice, reducedPrice, small, discount]
}

class PriceBox extends SvelteComponentDev {
  constructor(options) {
    super(options)

    init(this, options, instance, create_fragment, safe_not_equal, {
      originalPrice: 0,
      reducedPrice: 1,
      small: 2,
    })

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'PriceBox',
      options,
      id: create_fragment.name,
    })

    const { ctx } = this.$$
    const props = options.props || {}

    if (/*originalPrice*/ ctx[0] === undefined && !('originalPrice' in props)) {
      console.warn(
        "<PriceBox> was created without expected prop 'originalPrice'"
      )
    }

    if (/*reducedPrice*/ ctx[1] === undefined && !('reducedPrice' in props)) {
      console.warn(
        "<PriceBox> was created without expected prop 'reducedPrice'"
      )
    }
  }

  get originalPrice() {
    throw new Error(
      "<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set originalPrice(value) {
    throw new Error(
      "<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get reducedPrice() {
    throw new Error(
      "<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set reducedPrice(value) {
    throw new Error(
      "<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get small() {
    throw new Error(
      "<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set small(value) {
    throw new Error(
      "<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }
}

/* src/components/RectangleCard.svelte generated by Svelte v3.22.2 */
const file$1 = 'src/components/RectangleCard.svelte'

// (19:6) {#if windows}
function create_if_block_2(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', { src: true, height: true })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'windows.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '15px;')
      add_location(img, file$1, 19, 8, 435)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_2.name,
    type: 'if',
    source: '(19:6) {#if windows}',
    ctx,
  })

  return block
}

// (22:6) {#if mac}
function create_if_block_1(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', {
        src: true,
        height: true,
        style: true,
      })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'mac.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '15px;')
      set_style(img, 'margin-left', '4px')
      add_location(img, file$1, 22, 8, 512)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_1.name,
    type: 'if',
    source: '(22:6) {#if mac}',
    ctx,
  })

  return block
}

// (25:6) {#if steam}
function create_if_block(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', {
        src: true,
        height: true,
        style: true,
      })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'steamlogo.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '15px;')
      set_style(img, 'margin-left', '4px')
      add_location(img, file$1, 25, 8, 612)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block.name,
    type: 'if',
    source: '(25:6) {#if steam}',
    ctx,
  })

  return block
}

function create_fragment$1(ctx) {
  let div4
  let div0
  let t0
  let div3
  let div1
  let t1
  let t2
  let div2
  let t3
  let t4
  let current

  const pricebox = new PriceBox({
    props: {
      originalPrice: /*originalPrice*/ ctx[4],
      reducedPrice: /*reducedPrice*/ ctx[5],
    },
    $$inline: true,
  })

  let if_block0 = /*windows*/ ctx[1] && create_if_block_2(ctx)
  let if_block1 = /*mac*/ ctx[2] && create_if_block_1(ctx)
  let if_block2 = /*steam*/ ctx[3] && create_if_block(ctx)

  const block = {
    c: function create() {
      div4 = element('div')
      div0 = element('div')
      create_component(pricebox.$$.fragment)
      t0 = space()
      div3 = element('div')
      div1 = element('div')
      t1 = text('11 friends own this game')
      t2 = space()
      div2 = element('div')
      if (if_block0) if_block0.c()
      t3 = space()
      if (if_block1) if_block1.c()
      t4 = space()
      if (if_block2) if_block2.c()
      this.h()
    },
    l: function claim(nodes) {
      div4 = claim_element(nodes, 'DIV', { id: true, class: true })
      var div4_nodes = children(div4)
      div0 = claim_element(div4_nodes, 'DIV', {
        id: true,
        class: true,
        style: true,
      })
      var div0_nodes = children(div0)
      claim_component(pricebox.$$.fragment, div0_nodes)
      div0_nodes.forEach(detach_dev)
      t0 = claim_space(div4_nodes)
      div3 = claim_element(div4_nodes, 'DIV', { id: true, class: true })
      var div3_nodes = children(div3)
      div1 = claim_element(div3_nodes, 'DIV', { id: true, class: true })
      var div1_nodes = children(div1)
      t1 = claim_text(div1_nodes, '11 friends own this game')
      div1_nodes.forEach(detach_dev)
      t2 = claim_space(div3_nodes)
      div2 = claim_element(div3_nodes, 'DIV', {})
      var div2_nodes = children(div2)
      if (if_block0) if_block0.l(div2_nodes)
      t3 = claim_space(div2_nodes)
      if (if_block1) if_block1.l(div2_nodes)
      t4 = claim_space(div2_nodes)
      if (if_block2) if_block2.l(div2_nodes)
      div2_nodes.forEach(detach_dev)
      div3_nodes.forEach(detach_dev)
      div4_nodes.forEach(detach_dev)
      this.h()
    },
    h: function hydrate() {
      attr_dev(div0, 'id', 'image')
      attr_dev(div0, 'class', 'image svelte-crzkq5')
      set_style(div0, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      add_location(div0, file$1, 12, 2, 194)
      attr_dev(div1, 'id', 'owners')
      attr_dev(div1, 'class', 'svelte-crzkq5')
      add_location(div1, file$1, 16, 4, 349)
      add_location(div2, file$1, 17, 4, 401)
      attr_dev(div3, 'id', 'cardInfo')
      attr_dev(div3, 'class', 'svelte-crzkq5')
      add_location(div3, file$1, 15, 2, 325)
      attr_dev(div4, 'id', 'card')
      attr_dev(div4, 'class', 'svelte-crzkq5')
      add_location(div4, file$1, 11, 0, 176)
    },
    m: function mount(target, anchor) {
      insert_dev(target, div4, anchor)
      append_dev(div4, div0)
      mount_component(pricebox, div0, null)
      append_dev(div4, t0)
      append_dev(div4, div3)
      append_dev(div3, div1)
      append_dev(div1, t1)
      append_dev(div3, t2)
      append_dev(div3, div2)
      if (if_block0) if_block0.m(div2, null)
      append_dev(div2, t3)
      if (if_block1) if_block1.m(div2, null)
      append_dev(div2, t4)
      if (if_block2) if_block2.m(div2, null)
      current = true
    },
    p: function update(ctx, [dirty]) {
      const pricebox_changes = {}
      if (dirty & /*originalPrice*/ 16)
        pricebox_changes.originalPrice = /*originalPrice*/ ctx[4]
      if (dirty & /*reducedPrice*/ 32)
        pricebox_changes.reducedPrice = /*reducedPrice*/ ctx[5]
      pricebox.$set(pricebox_changes)

      if (!current || dirty & /*image*/ 1) {
        set_style(div0, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      }

      if (/*windows*/ ctx[1]) {
        if (if_block0);
        else {
          if_block0 = create_if_block_2(ctx)
          if_block0.c()
          if_block0.m(div2, t3)
        }
      } else if (if_block0) {
        if_block0.d(1)
        if_block0 = null
      }

      if (/*mac*/ ctx[2]) {
        if (if_block1);
        else {
          if_block1 = create_if_block_1(ctx)
          if_block1.c()
          if_block1.m(div2, t4)
        }
      } else if (if_block1) {
        if_block1.d(1)
        if_block1 = null
      }

      if (/*steam*/ ctx[3]) {
        if (if_block2);
        else {
          if_block2 = create_if_block(ctx)
          if_block2.c()
          if_block2.m(div2, null)
        }
      } else if (if_block2) {
        if_block2.d(1)
        if_block2 = null
      }
    },
    i: function intro(local) {
      if (current) return
      transition_in(pricebox.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(pricebox.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div4)
      destroy_component(pricebox)
      if (if_block0) if_block0.d()
      if (if_block1) if_block1.d()
      if (if_block2) if_block2.d()
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment$1.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance$1($$self, $$props, $$invalidate) {
  let { image } = $$props,
    { windows = true } = $$props,
    { mac = false } = $$props,
    { steam = false } = $$props,
    { originalPrice } = $$props,
    { reducedPrice } = $$props

  const writable_props = [
    'image',
    'windows',
    'mac',
    'steam',
    'originalPrice',
    'reducedPrice',
  ]

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<RectangleCard> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('RectangleCard', $$slots, [])

  $$self.$set = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('windows' in $$props) $$invalidate(1, (windows = $$props.windows))
    if ('mac' in $$props) $$invalidate(2, (mac = $$props.mac))
    if ('steam' in $$props) $$invalidate(3, (steam = $$props.steam))
    if ('originalPrice' in $$props)
      $$invalidate(4, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(5, (reducedPrice = $$props.reducedPrice))
  }

  $$self.$capture_state = () => ({
    PriceBox,
    image,
    windows,
    mac,
    steam,
    originalPrice,
    reducedPrice,
  })

  $$self.$inject_state = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('windows' in $$props) $$invalidate(1, (windows = $$props.windows))
    if ('mac' in $$props) $$invalidate(2, (mac = $$props.mac))
    if ('steam' in $$props) $$invalidate(3, (steam = $$props.steam))
    if ('originalPrice' in $$props)
      $$invalidate(4, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(5, (reducedPrice = $$props.reducedPrice))
  }

  if ($$props && '$$inject' in $$props) {
    $$self.$inject_state($$props.$$inject)
  }

  return [image, windows, mac, steam, originalPrice, reducedPrice]
}

class RectangleCard extends SvelteComponentDev {
  constructor(options) {
    super(options)

    init(this, options, instance$1, create_fragment$1, safe_not_equal, {
      image: 0,
      windows: 1,
      mac: 2,
      steam: 3,
      originalPrice: 4,
      reducedPrice: 5,
    })

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'RectangleCard',
      options,
      id: create_fragment$1.name,
    })

    const { ctx } = this.$$
    const props = options.props || {}

    if (/*image*/ ctx[0] === undefined && !('image' in props)) {
      console.warn("<RectangleCard> was created without expected prop 'image'")
    }

    if (/*originalPrice*/ ctx[4] === undefined && !('originalPrice' in props)) {
      console.warn(
        "<RectangleCard> was created without expected prop 'originalPrice'"
      )
    }

    if (/*reducedPrice*/ ctx[5] === undefined && !('reducedPrice' in props)) {
      console.warn(
        "<RectangleCard> was created without expected prop 'reducedPrice'"
      )
    }
  }

  get image() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set image(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get windows() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set windows(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get mac() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set mac(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get steam() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set steam(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get originalPrice() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set originalPrice(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get reducedPrice() {
    throw new Error(
      "<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set reducedPrice(value) {
    throw new Error(
      "<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }
}

/* src/components/SquareCard.svelte generated by Svelte v3.22.2 */
const file$2 = 'src/components/SquareCard.svelte'

// (19:6) {#if windows}
function create_if_block_2$1(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', { src: true, height: true })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'windows.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '12px;')
      add_location(img, file$2, 19, 8, 456)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_2$1.name,
    type: 'if',
    source: '(19:6) {#if windows}',
    ctx,
  })

  return block
}

// (22:6) {#if mac}
function create_if_block_1$1(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', {
        src: true,
        height: true,
        style: true,
      })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'mac.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '12px;')
      set_style(img, 'margin-left', '4px')
      add_location(img, file$2, 22, 8, 533)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_1$1.name,
    type: 'if',
    source: '(22:6) {#if mac}',
    ctx,
  })

  return block
}

// (25:6) {#if steam}
function create_if_block$1(ctx) {
  let img
  let img_src_value

  const block = {
    c: function create() {
      img = element('img')
      this.h()
    },
    l: function claim(nodes) {
      img = claim_element(nodes, 'IMG', {
        src: true,
        height: true,
        style: true,
      })
      this.h()
    },
    h: function hydrate() {
      if (img.src !== (img_src_value = 'steamlogo.svg'))
        attr_dev(img, 'src', img_src_value)
      attr_dev(img, 'height', '12px;')
      set_style(img, 'margin-left', '4px')
      add_location(img, file$2, 25, 8, 633)
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor)
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block$1.name,
    type: 'if',
    source: '(25:6) {#if steam}',
    ctx,
  })

  return block
}

function create_fragment$2(ctx) {
  let div3
  let div0
  let t0
  let div2
  let div1
  let t1
  let t2
  let current

  const pricebox = new PriceBox({
    props: {
      originalPrice: /*originalPrice*/ ctx[4],
      reducedPrice: /*reducedPrice*/ ctx[5],
      small: true,
    },
    $$inline: true,
  })

  let if_block0 = /*windows*/ ctx[1] && create_if_block_2$1(ctx)
  let if_block1 = /*mac*/ ctx[2] && create_if_block_1$1(ctx)
  let if_block2 = /*steam*/ ctx[3] && create_if_block$1(ctx)

  const block = {
    c: function create() {
      div3 = element('div')
      div0 = element('div')
      create_component(pricebox.$$.fragment)
      t0 = space()
      div2 = element('div')
      div1 = element('div')
      if (if_block0) if_block0.c()
      t1 = space()
      if (if_block1) if_block1.c()
      t2 = space()
      if (if_block2) if_block2.c()
      this.h()
    },
    l: function claim(nodes) {
      div3 = claim_element(nodes, 'DIV', { id: true, class: true })
      var div3_nodes = children(div3)
      div0 = claim_element(div3_nodes, 'DIV', {
        id: true,
        class: true,
        style: true,
      })
      var div0_nodes = children(div0)
      claim_component(pricebox.$$.fragment, div0_nodes)
      div0_nodes.forEach(detach_dev)
      t0 = claim_space(div3_nodes)
      div2 = claim_element(div3_nodes, 'DIV', { id: true, class: true })
      var div2_nodes = children(div2)
      div1 = claim_element(div2_nodes, 'DIV', {})
      var div1_nodes = children(div1)
      if (if_block0) if_block0.l(div1_nodes)
      t1 = claim_space(div1_nodes)
      if (if_block1) if_block1.l(div1_nodes)
      t2 = claim_space(div1_nodes)
      if (if_block2) if_block2.l(div1_nodes)
      div1_nodes.forEach(detach_dev)
      div2_nodes.forEach(detach_dev)
      div3_nodes.forEach(detach_dev)
      this.h()
    },
    h: function hydrate() {
      attr_dev(div0, 'id', 'image')
      attr_dev(div0, 'class', 'image svelte-1toy9u1')
      set_style(div0, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      add_location(div0, file$2, 12, 2, 194)
      add_location(div1, file$2, 17, 4, 422)
      attr_dev(div2, 'id', 'cardInfo')
      attr_dev(div2, 'class', 'svelte-1toy9u1')
      add_location(div2, file$2, 15, 2, 337)
      attr_dev(div3, 'id', 'card')
      attr_dev(div3, 'class', 'svelte-1toy9u1')
      add_location(div3, file$2, 11, 0, 176)
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor)
      append_dev(div3, div0)
      mount_component(pricebox, div0, null)
      append_dev(div3, t0)
      append_dev(div3, div2)
      append_dev(div2, div1)
      if (if_block0) if_block0.m(div1, null)
      append_dev(div1, t1)
      if (if_block1) if_block1.m(div1, null)
      append_dev(div1, t2)
      if (if_block2) if_block2.m(div1, null)
      current = true
    },
    p: function update(ctx, [dirty]) {
      const pricebox_changes = {}
      if (dirty & /*originalPrice*/ 16)
        pricebox_changes.originalPrice = /*originalPrice*/ ctx[4]
      if (dirty & /*reducedPrice*/ 32)
        pricebox_changes.reducedPrice = /*reducedPrice*/ ctx[5]
      pricebox.$set(pricebox_changes)

      if (!current || dirty & /*image*/ 1) {
        set_style(div0, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      }

      if (/*windows*/ ctx[1]) {
        if (if_block0);
        else {
          if_block0 = create_if_block_2$1(ctx)
          if_block0.c()
          if_block0.m(div1, t1)
        }
      } else if (if_block0) {
        if_block0.d(1)
        if_block0 = null
      }

      if (/*mac*/ ctx[2]) {
        if (if_block1);
        else {
          if_block1 = create_if_block_1$1(ctx)
          if_block1.c()
          if_block1.m(div1, t2)
        }
      } else if (if_block1) {
        if_block1.d(1)
        if_block1 = null
      }

      if (/*steam*/ ctx[3]) {
        if (if_block2);
        else {
          if_block2 = create_if_block$1(ctx)
          if_block2.c()
          if_block2.m(div1, null)
        }
      } else if (if_block2) {
        if_block2.d(1)
        if_block2 = null
      }
    },
    i: function intro(local) {
      if (current) return
      transition_in(pricebox.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(pricebox.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div3)
      destroy_component(pricebox)
      if (if_block0) if_block0.d()
      if (if_block1) if_block1.d()
      if (if_block2) if_block2.d()
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment$2.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance$2($$self, $$props, $$invalidate) {
  let { image } = $$props,
    { windows = true } = $$props,
    { mac = false } = $$props,
    { steam = false } = $$props,
    { originalPrice } = $$props,
    { reducedPrice } = $$props

  const writable_props = [
    'image',
    'windows',
    'mac',
    'steam',
    'originalPrice',
    'reducedPrice',
  ]

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<SquareCard> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('SquareCard', $$slots, [])

  $$self.$set = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('windows' in $$props) $$invalidate(1, (windows = $$props.windows))
    if ('mac' in $$props) $$invalidate(2, (mac = $$props.mac))
    if ('steam' in $$props) $$invalidate(3, (steam = $$props.steam))
    if ('originalPrice' in $$props)
      $$invalidate(4, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(5, (reducedPrice = $$props.reducedPrice))
  }

  $$self.$capture_state = () => ({
    PriceBox,
    image,
    windows,
    mac,
    steam,
    originalPrice,
    reducedPrice,
  })

  $$self.$inject_state = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('windows' in $$props) $$invalidate(1, (windows = $$props.windows))
    if ('mac' in $$props) $$invalidate(2, (mac = $$props.mac))
    if ('steam' in $$props) $$invalidate(3, (steam = $$props.steam))
    if ('originalPrice' in $$props)
      $$invalidate(4, (originalPrice = $$props.originalPrice))
    if ('reducedPrice' in $$props)
      $$invalidate(5, (reducedPrice = $$props.reducedPrice))
  }

  if ($$props && '$$inject' in $$props) {
    $$self.$inject_state($$props.$$inject)
  }

  return [image, windows, mac, steam, originalPrice, reducedPrice]
}

class SquareCard extends SvelteComponentDev {
  constructor(options) {
    super(options)

    init(this, options, instance$2, create_fragment$2, safe_not_equal, {
      image: 0,
      windows: 1,
      mac: 2,
      steam: 3,
      originalPrice: 4,
      reducedPrice: 5,
    })

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'SquareCard',
      options,
      id: create_fragment$2.name,
    })

    const { ctx } = this.$$
    const props = options.props || {}

    if (/*image*/ ctx[0] === undefined && !('image' in props)) {
      console.warn("<SquareCard> was created without expected prop 'image'")
    }

    if (/*originalPrice*/ ctx[4] === undefined && !('originalPrice' in props)) {
      console.warn(
        "<SquareCard> was created without expected prop 'originalPrice'"
      )
    }

    if (/*reducedPrice*/ ctx[5] === undefined && !('reducedPrice' in props)) {
      console.warn(
        "<SquareCard> was created without expected prop 'reducedPrice'"
      )
    }
  }

  get image() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set image(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get windows() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set windows(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get mac() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set mac(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get steam() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set steam(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get originalPrice() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set originalPrice(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get reducedPrice() {
    throw new Error(
      "<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set reducedPrice(value) {
    throw new Error(
      "<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }
}

/* src/components/StripCard.svelte generated by Svelte v3.22.2 */

const file$3 = 'src/components/StripCard.svelte'

function create_fragment$3(ctx) {
  let div3
  let div1
  let div0
  let t0
  let t1
  let div2

  const block = {
    c: function create() {
      div3 = element('div')
      div1 = element('div')
      div0 = element('div')
      t0 = text(/*genre*/ ctx[1])
      t1 = space()
      div2 = element('div')
      this.h()
    },
    l: function claim(nodes) {
      div3 = claim_element(nodes, 'DIV', { id: true, class: true })
      var div3_nodes = children(div3)
      div1 = claim_element(div3_nodes, 'DIV', {
        id: true,
        class: true,
        style: true,
      })
      var div1_nodes = children(div1)
      div0 = claim_element(div1_nodes, 'DIV', { id: true, class: true })
      var div0_nodes = children(div0)
      t0 = claim_text(div0_nodes, /*genre*/ ctx[1])
      div0_nodes.forEach(detach_dev)
      div1_nodes.forEach(detach_dev)
      t1 = claim_space(div3_nodes)
      div2 = claim_element(div3_nodes, 'DIV', { id: true })
      children(div2).forEach(detach_dev)
      div3_nodes.forEach(detach_dev)
      this.h()
    },
    h: function hydrate() {
      attr_dev(div0, 'id', 'imageController')
      attr_dev(div0, 'class', 'svelte-1r4wzwv')
      add_location(div0, file$3, 6, 4, 138)
      attr_dev(div1, 'id', 'image')
      attr_dev(div1, 'class', 'image svelte-1r4wzwv')
      set_style(div1, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      add_location(div1, file$3, 5, 2, 64)
      attr_dev(div2, 'id', 'cardInfo')
      add_location(div2, file$3, 8, 2, 189)
      attr_dev(div3, 'id', 'card')
      attr_dev(div3, 'class', 'svelte-1r4wzwv')
      add_location(div3, file$3, 4, 0, 46)
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor)
      append_dev(div3, div1)
      append_dev(div1, div0)
      append_dev(div0, t0)
      append_dev(div3, t1)
      append_dev(div3, div2)
    },
    p: function update(ctx, [dirty]) {
      if (dirty & /*genre*/ 2) set_data_dev(t0, /*genre*/ ctx[1])

      if (dirty & /*image*/ 1) {
        set_style(div1, 'background-image', 'url(' + /*image*/ ctx[0] + ')')
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(div3)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment$3.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance$3($$self, $$props, $$invalidate) {
  let { image } = $$props,
    { genre } = $$props
  const writable_props = ['image', 'genre']

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<StripCard> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('StripCard', $$slots, [])

  $$self.$set = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('genre' in $$props) $$invalidate(1, (genre = $$props.genre))
  }

  $$self.$capture_state = () => ({ image, genre })

  $$self.$inject_state = ($$props) => {
    if ('image' in $$props) $$invalidate(0, (image = $$props.image))
    if ('genre' in $$props) $$invalidate(1, (genre = $$props.genre))
  }

  if ($$props && '$$inject' in $$props) {
    $$self.$inject_state($$props.$$inject)
  }

  return [image, genre]
}

class StripCard extends SvelteComponentDev {
  constructor(options) {
    super(options)
    init(this, options, instance$3, create_fragment$3, safe_not_equal, {
      image: 0,
      genre: 1,
    })

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'StripCard',
      options,
      id: create_fragment$3.name,
    })

    const { ctx } = this.$$
    const props = options.props || {}

    if (/*image*/ ctx[0] === undefined && !('image' in props)) {
      console.warn("<StripCard> was created without expected prop 'image'")
    }

    if (/*genre*/ ctx[1] === undefined && !('genre' in props)) {
      console.warn("<StripCard> was created without expected prop 'genre'")
    }
  }

  get image() {
    throw new Error(
      "<StripCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set image(value) {
    throw new Error(
      "<StripCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get genre() {
    throw new Error(
      "<StripCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set genre(value) {
    throw new Error(
      "<StripCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }
}

/* src/components/StoreSection.svelte generated by Svelte v3.22.2 */
const file$4 = 'src/components/StoreSection.svelte'

// (17:4) {#if rectangleCard}
function create_if_block_2$2(ctx) {
  let t0
  let t1
  let t2
  let t3
  let current

  const rectanglecard0 = new RectangleCard({
    props: {
      image:
        'https://cdn.arstechnica.net/wp-content/uploads/2019/10/outer-worlds-listing.png',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const rectanglecard1 = new RectangleCard({
    props: {
      image: 'https://i.ytimg.com/vi/eaW0tYpxyp0/maxresdefault.jpg',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const rectanglecard2 = new RectangleCard({
    props: {
      image:
        'https://steamcdn-a.akamaihd.net/steam/apps/374320/capsule_616x353.jpg',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const rectanglecard3 = new RectangleCard({
    props: {
      image: 'https://steam.cryotank.net/wp-content/gallery/ori/Ori-01-HD.png',
      mac: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const rectanglecard4 = new RectangleCard({
    props: {
      image: 'https://i.ytimg.com/vi/2enbYOMtR4I/maxresdefault.jpg',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const block = {
    c: function create() {
      create_component(rectanglecard0.$$.fragment)
      t0 = space()
      create_component(rectanglecard1.$$.fragment)
      t1 = space()
      create_component(rectanglecard2.$$.fragment)
      t2 = space()
      create_component(rectanglecard3.$$.fragment)
      t3 = space()
      create_component(rectanglecard4.$$.fragment)
    },
    l: function claim(nodes) {
      claim_component(rectanglecard0.$$.fragment, nodes)
      t0 = claim_space(nodes)
      claim_component(rectanglecard1.$$.fragment, nodes)
      t1 = claim_space(nodes)
      claim_component(rectanglecard2.$$.fragment, nodes)
      t2 = claim_space(nodes)
      claim_component(rectanglecard3.$$.fragment, nodes)
      t3 = claim_space(nodes)
      claim_component(rectanglecard4.$$.fragment, nodes)
    },
    m: function mount(target, anchor) {
      mount_component(rectanglecard0, target, anchor)
      insert_dev(target, t0, anchor)
      mount_component(rectanglecard1, target, anchor)
      insert_dev(target, t1, anchor)
      mount_component(rectanglecard2, target, anchor)
      insert_dev(target, t2, anchor)
      mount_component(rectanglecard3, target, anchor)
      insert_dev(target, t3, anchor)
      mount_component(rectanglecard4, target, anchor)
      current = true
    },
    i: function intro(local) {
      if (current) return
      transition_in(rectanglecard0.$$.fragment, local)
      transition_in(rectanglecard1.$$.fragment, local)
      transition_in(rectanglecard2.$$.fragment, local)
      transition_in(rectanglecard3.$$.fragment, local)
      transition_in(rectanglecard4.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(rectanglecard0.$$.fragment, local)
      transition_out(rectanglecard1.$$.fragment, local)
      transition_out(rectanglecard2.$$.fragment, local)
      transition_out(rectanglecard3.$$.fragment, local)
      transition_out(rectanglecard4.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      destroy_component(rectanglecard0, detaching)
      if (detaching) detach_dev(t0)
      destroy_component(rectanglecard1, detaching)
      if (detaching) detach_dev(t1)
      destroy_component(rectanglecard2, detaching)
      if (detaching) detach_dev(t2)
      destroy_component(rectanglecard3, detaching)
      if (detaching) detach_dev(t3)
      destroy_component(rectanglecard4, detaching)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_2$2.name,
    type: 'if',
    source: '(17:4) {#if rectangleCard}',
    ctx,
  })

  return block
}

// (40:4) {#if squareCard}
function create_if_block_1$2(ctx) {
  let t0
  let t1
  let t2
  let t3
  let current

  const squarecard0 = new SquareCard({
    props: {
      image:
        'https://lh3.googleusercontent.com/caNRdVjHrAC8AXjQwNp4u0FzK2xwKTMC--MYdb8xXNeCinjwQOF8EqSOcYCC3RFBdgjd',
      mac: 'true',
      steam: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const squarecard1 = new SquareCard({
    props: {
      image:
        'https://www.androidpolice.com/wp-content/uploads/2018/10/81LJeCDylML.jpg',
      mac: 'true',
      steam: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const squarecard2 = new SquareCard({
    props: {
      image:
        'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsrSn4-vAw6oUWmYryVBtEnTUUd6-5rCQdzS1p4Hik-dLxOnOz&usqp=CAU',
      mac: 'true',
      steam: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const squarecard3 = new SquareCard({
    props: {
      image: 'https://i.ytimg.com/vi/gvECQlxrhbw/maxresdefault.jpg',
      mac: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const squarecard4 = new SquareCard({
    props: {
      image: 'https://images-na.ssl-images-amazon.com/images/I/71p9r+IRobL.jpg',
      mac: 'true',
      originalPrice: '69.99',
      reducedPrice: '59.99',
    },
    $$inline: true,
  })

  const block = {
    c: function create() {
      create_component(squarecard0.$$.fragment)
      t0 = space()
      create_component(squarecard1.$$.fragment)
      t1 = space()
      create_component(squarecard2.$$.fragment)
      t2 = space()
      create_component(squarecard3.$$.fragment)
      t3 = space()
      create_component(squarecard4.$$.fragment)
    },
    l: function claim(nodes) {
      claim_component(squarecard0.$$.fragment, nodes)
      t0 = claim_space(nodes)
      claim_component(squarecard1.$$.fragment, nodes)
      t1 = claim_space(nodes)
      claim_component(squarecard2.$$.fragment, nodes)
      t2 = claim_space(nodes)
      claim_component(squarecard3.$$.fragment, nodes)
      t3 = claim_space(nodes)
      claim_component(squarecard4.$$.fragment, nodes)
    },
    m: function mount(target, anchor) {
      mount_component(squarecard0, target, anchor)
      insert_dev(target, t0, anchor)
      mount_component(squarecard1, target, anchor)
      insert_dev(target, t1, anchor)
      mount_component(squarecard2, target, anchor)
      insert_dev(target, t2, anchor)
      mount_component(squarecard3, target, anchor)
      insert_dev(target, t3, anchor)
      mount_component(squarecard4, target, anchor)
      current = true
    },
    i: function intro(local) {
      if (current) return
      transition_in(squarecard0.$$.fragment, local)
      transition_in(squarecard1.$$.fragment, local)
      transition_in(squarecard2.$$.fragment, local)
      transition_in(squarecard3.$$.fragment, local)
      transition_in(squarecard4.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(squarecard0.$$.fragment, local)
      transition_out(squarecard1.$$.fragment, local)
      transition_out(squarecard2.$$.fragment, local)
      transition_out(squarecard3.$$.fragment, local)
      transition_out(squarecard4.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      destroy_component(squarecard0, detaching)
      if (detaching) detach_dev(t0)
      destroy_component(squarecard1, detaching)
      if (detaching) detach_dev(t1)
      destroy_component(squarecard2, detaching)
      if (detaching) detach_dev(t2)
      destroy_component(squarecard3, detaching)
      if (detaching) detach_dev(t3)
      destroy_component(squarecard4, detaching)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block_1$2.name,
    type: 'if',
    source: '(40:4) {#if squareCard}',
    ctx,
  })

  return block
}

// (70:4) {#if stripCard}
function create_if_block$2(ctx) {
  let t0
  let t1
  let t2
  let t3
  let current

  const stripcard0 = new StripCard({
    props: {
      genre: 'Indie',
      image:
        'https://venturebeat.com/wp-content/uploads/2012/03/journey-1.jpg?w=1200&strip=all',
    },
    $$inline: true,
  })

  const stripcard1 = new StripCard({
    props: {
      genre: 'Action',
      image:
        'https://store-images.s-microsoft.com/image/apps.38656.69038865179152125.af885fa8-7b94-47b1-be3a-d2ab6af95a6a.af83131f-d4dc-4d47-a84d-25aab92a5e5b?mode=scale&q=90&h=1080&w=1920',
    },
    $$inline: true,
  })

  const stripcard2 = new StripCard({
    props: {
      genre: 'Adventure',
      image:
        'https://assets1.ignimgs.com/2020/03/24/ign-doom-eternal-complete-review-blogroll-1585092832291.jpg',
    },
    $$inline: true,
  })

  const stripcard3 = new StripCard({
    props: {
      genre: 'Multiplayer',
      image:
        'https://steamcdn-a.akamaihd.net/apps/dota2/images/blog/play/dota_heroes.png',
    },
    $$inline: true,
  })

  const stripcard4 = new StripCard({
    props: {
      genre: 'Horror',
      image:
        'https://i2.wp.com/tecake.com/wp-content/uploads/2020/04/4L2MLiPnTT5hMHbCqgyjAc.jpg?fit=1920%2C1080&ssl=1',
    },
    $$inline: true,
  })

  const block = {
    c: function create() {
      create_component(stripcard0.$$.fragment)
      t0 = space()
      create_component(stripcard1.$$.fragment)
      t1 = space()
      create_component(stripcard2.$$.fragment)
      t2 = space()
      create_component(stripcard3.$$.fragment)
      t3 = space()
      create_component(stripcard4.$$.fragment)
    },
    l: function claim(nodes) {
      claim_component(stripcard0.$$.fragment, nodes)
      t0 = claim_space(nodes)
      claim_component(stripcard1.$$.fragment, nodes)
      t1 = claim_space(nodes)
      claim_component(stripcard2.$$.fragment, nodes)
      t2 = claim_space(nodes)
      claim_component(stripcard3.$$.fragment, nodes)
      t3 = claim_space(nodes)
      claim_component(stripcard4.$$.fragment, nodes)
    },
    m: function mount(target, anchor) {
      mount_component(stripcard0, target, anchor)
      insert_dev(target, t0, anchor)
      mount_component(stripcard1, target, anchor)
      insert_dev(target, t1, anchor)
      mount_component(stripcard2, target, anchor)
      insert_dev(target, t2, anchor)
      mount_component(stripcard3, target, anchor)
      insert_dev(target, t3, anchor)
      mount_component(stripcard4, target, anchor)
      current = true
    },
    i: function intro(local) {
      if (current) return
      transition_in(stripcard0.$$.fragment, local)
      transition_in(stripcard1.$$.fragment, local)
      transition_in(stripcard2.$$.fragment, local)
      transition_in(stripcard3.$$.fragment, local)
      transition_in(stripcard4.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(stripcard0.$$.fragment, local)
      transition_out(stripcard1.$$.fragment, local)
      transition_out(stripcard2.$$.fragment, local)
      transition_out(stripcard3.$$.fragment, local)
      transition_out(stripcard4.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      destroy_component(stripcard0, detaching)
      if (detaching) detach_dev(t0)
      destroy_component(stripcard1, detaching)
      if (detaching) detach_dev(t1)
      destroy_component(stripcard2, detaching)
      if (detaching) detach_dev(t2)
      destroy_component(stripcard3, detaching)
      if (detaching) detach_dev(t3)
      destroy_component(stripcard4, detaching)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_if_block$2.name,
    type: 'if',
    source: '(70:4) {#if stripCard}',
    ctx,
  })

  return block
}

function create_fragment$4(ctx) {
  let div1
  let h6
  let t0
  let t1
  let h3
  let t2
  let t3
  let div0
  let t4
  let t5
  let current
  let if_block0 = /*rectangleCard*/ ctx[2] && create_if_block_2$2(ctx)
  let if_block1 = /*squareCard*/ ctx[3] && create_if_block_1$2(ctx)
  let if_block2 = /*stripCard*/ ctx[4] && create_if_block$2(ctx)

  const block = {
    c: function create() {
      div1 = element('div')
      h6 = element('h6')
      t0 = text(/*tag*/ ctx[0])
      t1 = space()
      h3 = element('h3')
      t2 = text(/*heading*/ ctx[1])
      t3 = space()
      div0 = element('div')
      if (if_block0) if_block0.c()
      t4 = space()
      if (if_block1) if_block1.c()
      t5 = space()
      if (if_block2) if_block2.c()
      this.h()
    },
    l: function claim(nodes) {
      div1 = claim_element(nodes, 'DIV', { id: true, class: true })
      var div1_nodes = children(div1)
      h6 = claim_element(div1_nodes, 'H6', { class: true })
      var h6_nodes = children(h6)
      t0 = claim_text(h6_nodes, /*tag*/ ctx[0])
      h6_nodes.forEach(detach_dev)
      t1 = claim_space(div1_nodes)
      h3 = claim_element(div1_nodes, 'H3', { class: true })
      var h3_nodes = children(h3)
      t2 = claim_text(h3_nodes, /*heading*/ ctx[1])
      h3_nodes.forEach(detach_dev)
      t3 = claim_space(div1_nodes)
      div0 = claim_element(div1_nodes, 'DIV', { id: true, class: true })
      var div0_nodes = children(div0)
      if (if_block0) if_block0.l(div0_nodes)
      t4 = claim_space(div0_nodes)
      if (if_block1) if_block1.l(div0_nodes)
      t5 = claim_space(div0_nodes)
      if (if_block2) if_block2.l(div0_nodes)
      div0_nodes.forEach(detach_dev)
      div1_nodes.forEach(detach_dev)
      this.h()
    },
    h: function hydrate() {
      attr_dev(h6, 'class', 'svelte-1bqqa9q')
      add_location(h6, file$4, 13, 2, 332)
      attr_dev(h3, 'class', 'svelte-1bqqa9q')
      add_location(h3, file$4, 14, 2, 349)
      attr_dev(div0, 'id', 'spotlight')
      attr_dev(div0, 'class', 'svelte-1bqqa9q')
      add_location(div0, file$4, 15, 2, 370)
      attr_dev(div1, 'id', 'section')
      attr_dev(div1, 'class', 'svelte-1bqqa9q')
      add_location(div1, file$4, 12, 0, 311)
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor)
      append_dev(div1, h6)
      append_dev(h6, t0)
      append_dev(div1, t1)
      append_dev(div1, h3)
      append_dev(h3, t2)
      append_dev(div1, t3)
      append_dev(div1, div0)
      if (if_block0) if_block0.m(div0, null)
      append_dev(div0, t4)
      if (if_block1) if_block1.m(div0, null)
      append_dev(div0, t5)
      if (if_block2) if_block2.m(div0, null)
      current = true
    },
    p: function update(ctx, [dirty]) {
      if (!current || dirty & /*tag*/ 1) set_data_dev(t0, /*tag*/ ctx[0])
      if (!current || dirty & /*heading*/ 2)
        set_data_dev(t2, /*heading*/ ctx[1])

      if (/*rectangleCard*/ ctx[2]) {
        if (if_block0) {
          if (dirty & /*rectangleCard*/ 4) {
            transition_in(if_block0, 1)
          }
        } else {
          if_block0 = create_if_block_2$2(ctx)
          if_block0.c()
          transition_in(if_block0, 1)
          if_block0.m(div0, t4)
        }
      } else if (if_block0) {
        group_outros()

        transition_out(if_block0, 1, 1, () => {
          if_block0 = null
        })

        check_outros()
      }

      if (/*squareCard*/ ctx[3]) {
        if (if_block1) {
          if (dirty & /*squareCard*/ 8) {
            transition_in(if_block1, 1)
          }
        } else {
          if_block1 = create_if_block_1$2(ctx)
          if_block1.c()
          transition_in(if_block1, 1)
          if_block1.m(div0, t5)
        }
      } else if (if_block1) {
        group_outros()

        transition_out(if_block1, 1, 1, () => {
          if_block1 = null
        })

        check_outros()
      }

      if (/*stripCard*/ ctx[4]) {
        if (if_block2) {
          if (dirty & /*stripCard*/ 16) {
            transition_in(if_block2, 1)
          }
        } else {
          if_block2 = create_if_block$2(ctx)
          if_block2.c()
          transition_in(if_block2, 1)
          if_block2.m(div0, null)
        }
      } else if (if_block2) {
        group_outros()

        transition_out(if_block2, 1, 1, () => {
          if_block2 = null
        })

        check_outros()
      }
    },
    i: function intro(local) {
      if (current) return
      transition_in(if_block0)
      transition_in(if_block1)
      transition_in(if_block2)
      current = true
    },
    o: function outro(local) {
      transition_out(if_block0)
      transition_out(if_block1)
      transition_out(if_block2)
      current = false
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div1)
      if (if_block0) if_block0.d()
      if (if_block1) if_block1.d()
      if (if_block2) if_block2.d()
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment$4.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance$4($$self, $$props, $$invalidate) {
  let { tag = '' } = $$props,
    { heading } = $$props,
    { rectangleCard = false } = $$props,
    { squareCard = false } = $$props,
    { stripCard = false } = $$props

  const writable_props = [
    'tag',
    'heading',
    'rectangleCard',
    'squareCard',
    'stripCard',
  ]

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<StoreSection> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('StoreSection', $$slots, [])

  $$self.$set = ($$props) => {
    if ('tag' in $$props) $$invalidate(0, (tag = $$props.tag))
    if ('heading' in $$props) $$invalidate(1, (heading = $$props.heading))
    if ('rectangleCard' in $$props)
      $$invalidate(2, (rectangleCard = $$props.rectangleCard))
    if ('squareCard' in $$props)
      $$invalidate(3, (squareCard = $$props.squareCard))
    if ('stripCard' in $$props) $$invalidate(4, (stripCard = $$props.stripCard))
  }

  $$self.$capture_state = () => ({
    RectangleCard,
    SquareCard,
    StripCard,
    tag,
    heading,
    rectangleCard,
    squareCard,
    stripCard,
  })

  $$self.$inject_state = ($$props) => {
    if ('tag' in $$props) $$invalidate(0, (tag = $$props.tag))
    if ('heading' in $$props) $$invalidate(1, (heading = $$props.heading))
    if ('rectangleCard' in $$props)
      $$invalidate(2, (rectangleCard = $$props.rectangleCard))
    if ('squareCard' in $$props)
      $$invalidate(3, (squareCard = $$props.squareCard))
    if ('stripCard' in $$props) $$invalidate(4, (stripCard = $$props.stripCard))
  }

  if ($$props && '$$inject' in $$props) {
    $$self.$inject_state($$props.$$inject)
  }

  return [tag, heading, rectangleCard, squareCard, stripCard]
}

class StoreSection extends SvelteComponentDev {
  constructor(options) {
    super(options)

    init(this, options, instance$4, create_fragment$4, safe_not_equal, {
      tag: 0,
      heading: 1,
      rectangleCard: 2,
      squareCard: 3,
      stripCard: 4,
    })

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'StoreSection',
      options,
      id: create_fragment$4.name,
    })

    const { ctx } = this.$$
    const props = options.props || {}

    if (/*heading*/ ctx[1] === undefined && !('heading' in props)) {
      console.warn("<StoreSection> was created without expected prop 'heading'")
    }
  }

  get tag() {
    throw new Error(
      "<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set tag(value) {
    throw new Error(
      "<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get heading() {
    throw new Error(
      "<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set heading(value) {
    throw new Error(
      "<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get rectangleCard() {
    throw new Error(
      "<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set rectangleCard(value) {
    throw new Error(
      "<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get squareCard() {
    throw new Error(
      "<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set squareCard(value) {
    throw new Error(
      "<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  get stripCard() {
    throw new Error(
      "<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }

  set stripCard(value) {
    throw new Error(
      "<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'"
    )
  }
}

/* src/routes/store.svelte generated by Svelte v3.22.2 */
const file$5 = 'src/routes/store.svelte'

function create_fragment$5(ctx) {
  let t0
  let t1
  let div
  let t2
  let t3
  let t4
  let current

  const navbar = new Navbar({
    props: { title: 'Steam Store' },
    $$inline: true,
  })

  const storesection0 = new StoreSection({
    props: {
      tag: 'Special Offers',
      heading: 'Midnight Madness',
      rectangleCard: 'true',
    },
    $$inline: true,
  })

  const storesection1 = new StoreSection({
    props: {
      heading: 'Featured & Recommended',
      squareCard: 'true',
    },
    $$inline: true,
  })

  const storesection2 = new StoreSection({
    props: { heading: 'Tags', stripCard: 'true' },
    $$inline: true,
  })

  const tabbar = new Tabbar({ props: { location: 1 }, $$inline: true })

  const block = {
    c: function create() {
      t0 = space()
      create_component(navbar.$$.fragment)
      t1 = space()
      div = element('div')
      create_component(storesection0.$$.fragment)
      t2 = space()
      create_component(storesection1.$$.fragment)
      t3 = space()
      create_component(storesection2.$$.fragment)
      t4 = space()
      create_component(tabbar.$$.fragment)
      this.h()
    },
    l: function claim(nodes) {
      const head_nodes = query_selector_all(
        '[data-svelte="svelte-160duyq"]',
        document.head
      )
      head_nodes.forEach(detach_dev)
      t0 = claim_space(nodes)
      claim_component(navbar.$$.fragment, nodes)
      t1 = claim_space(nodes)
      div = claim_element(nodes, 'DIV', { id: true, class: true })
      var div_nodes = children(div)
      claim_component(storesection0.$$.fragment, div_nodes)
      t2 = claim_space(div_nodes)
      claim_component(storesection1.$$.fragment, div_nodes)
      t3 = claim_space(div_nodes)
      claim_component(storesection2.$$.fragment, div_nodes)
      div_nodes.forEach(detach_dev)
      t4 = claim_space(nodes)
      claim_component(tabbar.$$.fragment, nodes)
      this.h()
    },
    h: function hydrate() {
      document.title = 'Store :: Steam Mobile'
      attr_dev(div, 'id', 'store')
      attr_dev(div, 'class', 'svelte-1s5ozd4')
      add_location(div, file$5, 11, 0, 285)
    },
    m: function mount(target, anchor) {
      insert_dev(target, t0, anchor)
      mount_component(navbar, target, anchor)
      insert_dev(target, t1, anchor)
      insert_dev(target, div, anchor)
      mount_component(storesection0, div, null)
      append_dev(div, t2)
      mount_component(storesection1, div, null)
      append_dev(div, t3)
      mount_component(storesection2, div, null)
      insert_dev(target, t4, anchor)
      mount_component(tabbar, target, anchor)
      current = true
    },
    p: noop,
    i: function intro(local) {
      if (current) return
      transition_in(navbar.$$.fragment, local)
      transition_in(storesection0.$$.fragment, local)
      transition_in(storesection1.$$.fragment, local)
      transition_in(storesection2.$$.fragment, local)
      transition_in(tabbar.$$.fragment, local)
      current = true
    },
    o: function outro(local) {
      transition_out(navbar.$$.fragment, local)
      transition_out(storesection0.$$.fragment, local)
      transition_out(storesection1.$$.fragment, local)
      transition_out(storesection2.$$.fragment, local)
      transition_out(tabbar.$$.fragment, local)
      current = false
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t0)
      destroy_component(navbar, detaching)
      if (detaching) detach_dev(t1)
      if (detaching) detach_dev(div)
      destroy_component(storesection0)
      destroy_component(storesection1)
      destroy_component(storesection2)
      if (detaching) detach_dev(t4)
      destroy_component(tabbar, detaching)
    },
  }

  dispatch_dev('SvelteRegisterBlock', {
    block,
    id: create_fragment$5.name,
    type: 'component',
    source: '',
    ctx,
  })

  return block
}

function instance$5($$self, $$props, $$invalidate) {
  const writable_props = []

  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$')
      console.warn(`<Store> was created with unknown prop '${key}'`)
  })

  let { $$slots = {}, $$scope } = $$props
  validate_slots('Store', $$slots, [])
  $$self.$capture_state = () => ({ Navbar, Tabbar, StoreSection })
  return []
}

class Store extends SvelteComponentDev {
  constructor(options) {
    super(options)
    init(this, options, instance$5, create_fragment$5, safe_not_equal, {})

    dispatch_dev('SvelteRegisterComponent', {
      component: this,
      tagName: 'Store',
      options,
      id: create_fragment$5.name,
    })
  }
}

export default Store
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUuNDQ1ZjE4YWEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1ByaWNlQm94LnN2ZWx0ZSIsIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1JlY3RhbmdsZUNhcmQuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU3F1YXJlQ2FyZC5zdmVsdGUiLCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TdHJpcENhcmQuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU3RvcmVTZWN0aW9uLnN2ZWx0ZSIsIi4uLy4uLy4uL3NyYy9yb3V0ZXMvc3RvcmUuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgb3JpZ2luYWxQcmljZSxcbiAgICByZWR1Y2VkUHJpY2UsXG4gICAgc21hbGwgPSBmYWxzZVxuICBsZXQgZGlzY291bnQgPSAoXG4gICAgKChvcmlnaW5hbFByaWNlIC0gcmVkdWNlZFByaWNlKSAqIDEwMCkgL1xuICAgIG9yaWdpbmFsUHJpY2VcbiAgKS50b0ZpeGVkKDApXG48L3NjcmlwdD5cblxuPGRpdiBpZD1cInByaWNlYm94XCI+XG4gIDxkaXYgaWQ9XCJkaXNjb3VudFwiIGNsYXNzPXtzbWFsbCA/ICdkaXNjb3VudCBkaXNjb3VudC0tc3F1YXJlJyA6ICcnfT5cbiAgICAte2Rpc2NvdW50fSVcbiAgPC9kaXY+XG4gIDxkaXYgaWQ9XCJwcmljZXNcIiBjbGFzcz17c21hbGwgPyAncHJpY2VzIHByaWNlcy0tc3F1YXJlJyA6ICcnfT5cbiAgICA8ZGl2IGlkPVwib3JpZ2luYWxwcmljZVwiIGNsYXNzPXtzbWFsbCA/ICdvcmlnaW5hbHByaWNlLS1zcXVhcmUnIDogJyd9PlxuICAgICAgJHtvcmlnaW5hbFByaWNlfVxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJyZWR1Y2VkcHJpY2VcIiBjbGFzcz17c21hbGwgPyAncmVkdWNlZHByaWNlLS1zcXVhcmUnIDogJyd9PlxuICAgICAgJHtyZWR1Y2VkUHJpY2V9XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgI3ByaWNlYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIG1hcmdpbjogMTVweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuXG4gICNkaXNjb3VudCxcbiAgI3ByaWNlcyB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMnB4IDEwcHg7XG4gIH1cblxuICAjZGlzY291bnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0YzZiMjI7XG4gICAgY29sb3I6ICNhNGQwMDc7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAjcHJpY2VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGQzMDNmO1xuICAgIGNvbG9yOiAjYTdkNmYwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cblxuICAjb3JpZ2luYWxwcmljZSB7XG4gICAgZm9udC1zaXplOiA4cHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gIH1cblxuICAjcmVkdWNlZHByaWNlIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxuXG4gIC8qc3F1YXJlIGNhcmQgbW9kaWZpZXIqL1xuICAuZGlzY291bnQsXG4gIC5wcmljZXMge1xuICAgIHBhZGRpbmc6IDFweCA4cHggIWltcG9ydGFudDtcbiAgfVxuXG4gIC5kaXNjb3VudC0tc3F1YXJlIHtcbiAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcbiAgfVxuXG4gIC5vcmlnaW5hbHByaWNlLS1zcXVhcmUge1xuICAgIGZvbnQtc2l6ZTogNnB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAucmVkdWNlZHByaWNlLS1zcXVhcmUge1xuICAgIGZvbnQtc2l6ZTogMTBweCAhaW1wb3J0YW50O1xuICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgaW1wb3J0IFByaWNlQm94IGZyb20gJy4vUHJpY2VCb3guc3ZlbHRlJ1xuXG4gIGV4cG9ydCBsZXQgaW1hZ2UsXG4gICAgd2luZG93cyA9IHRydWUsXG4gICAgbWFjID0gZmFsc2UsXG4gICAgc3RlYW0gPSBmYWxzZSxcbiAgICBvcmlnaW5hbFByaWNlLFxuICAgIHJlZHVjZWRQcmljZVxuPC9zY3JpcHQ+XG5cbjxkaXYgaWQ9XCJjYXJkXCI+XG4gIDxkaXYgaWQ9XCJpbWFnZVwiICBjbGFzcz1cImltYWdlXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoe2ltYWdlfSk7XCI+XG4gICAgPFByaWNlQm94IHtvcmlnaW5hbFByaWNlfSB7cmVkdWNlZFByaWNlfSAvPlxuICA8L2Rpdj5cbiAgPGRpdiBpZD1cImNhcmRJbmZvXCI+XG4gICAgPGRpdiBpZD1cIm93bmVyc1wiPjExIGZyaWVuZHMgb3duIHRoaXMgZ2FtZTwvZGl2PlxuICAgIDxkaXY+XG4gICAgICB7I2lmIHdpbmRvd3N9XG4gICAgICAgIDxpbWcgc3JjPVwid2luZG93cy5zdmdcIiBoZWlnaHQ9XCIxNXB4O1wiIC8+XG4gICAgICB7L2lmfVxuICAgICAgeyNpZiBtYWN9XG4gICAgICAgIDxpbWcgc3JjPVwibWFjLnN2Z1wiIGhlaWdodD1cIjE1cHg7XCIgc3R5bGU9XCJtYXJnaW4tbGVmdDogNHB4XCIgLz5cbiAgICAgIHsvaWZ9XG4gICAgICB7I2lmIHN0ZWFtfVxuICAgICAgICA8aW1nIHNyYz1cInN0ZWFtbG9nby5zdmdcIiBoZWlnaHQ9XCIxNXB4O1wiIHN0eWxlPVwibWFyZ2luLWxlZnQ6IDRweFwiIC8+XG4gICAgICB7L2lmfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICNjYXJkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuaW1hZ2Uge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHNjcm9sbC1zbmFwLXN0b3A6IGJvdGg7XG4gICAgc2Nyb2xsLXNuYXAtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gICNvd25lcnMge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogI2E3ZDZmMDtcbiAgfVxuXG4gICNjYXJkSW5mbyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgaW1wb3J0IFByaWNlQm94IGZyb20gJy4vUHJpY2VCb3guc3ZlbHRlJ1xuXG4gIGV4cG9ydCBsZXQgaW1hZ2UsXG4gICAgd2luZG93cyA9IHRydWUsXG4gICAgbWFjID0gZmFsc2UsXG4gICAgc3RlYW0gPSBmYWxzZSxcbiAgICBvcmlnaW5hbFByaWNlLFxuICAgIHJlZHVjZWRQcmljZVxuPC9zY3JpcHQ+XG5cbjxkaXYgaWQ9XCJjYXJkXCI+XG4gIDxkaXYgaWQ9XCJpbWFnZVwiIGNsYXNzPVwiaW1hZ2VcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IHVybCh7aW1hZ2V9KTtcIj5cbiAgICA8UHJpY2VCb3gge29yaWdpbmFsUHJpY2V9IHtyZWR1Y2VkUHJpY2V9IHNtYWxsPXt0cnVlfSAvPlxuICA8L2Rpdj5cbiAgPGRpdiBpZD1cImNhcmRJbmZvXCI+XG4gICAgPCEtLSA8ZGl2IGlkPVwib3duZXJzXCI+MTEgZnJpZW5kcyBvd24gdGhpcyBnYW1lPC9kaXY+IC0tPlxuICAgIDxkaXY+XG4gICAgICB7I2lmIHdpbmRvd3N9XG4gICAgICAgIDxpbWcgc3JjPVwid2luZG93cy5zdmdcIiBoZWlnaHQ9XCIxMnB4O1wiIC8+XG4gICAgICB7L2lmfVxuICAgICAgeyNpZiBtYWN9XG4gICAgICAgIDxpbWcgc3JjPVwibWFjLnN2Z1wiIGhlaWdodD1cIjEycHg7XCIgc3R5bGU9XCJtYXJnaW4tbGVmdDogNHB4XCIgLz5cbiAgICAgIHsvaWZ9XG4gICAgICB7I2lmIHN0ZWFtfVxuICAgICAgICA8aW1nIHNyYz1cInN0ZWFtbG9nby5zdmdcIiBoZWlnaHQ9XCIxMnB4O1wiIHN0eWxlPVwibWFyZ2luLWxlZnQ6IDRweFwiIC8+XG4gICAgICB7L2lmfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICNjYXJkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuaW1hZ2Uge1xuICAgIHdpZHRoOiAxNDVweDtcbiAgICBoZWlnaHQ6IDE0NXB4O1xuICAgIHNjcm9sbC1zbmFwLWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAvKlx0I293bmVycyB7XG5cdFx0Zm9udC1zaXplOiA4cHg7XG5cdFx0Y29sb3I6ICNhN2Q2ZjA7XG5cdH0qL1xuXG4gICNjYXJkSW5mbyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLypqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Ki9cbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICAgIHBhZGRpbmc6IDAgNXB4O1xuICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgZXhwb3J0IGxldCBpbWFnZSwgZ2VucmVcbjwvc2NyaXB0PlxuXG48ZGl2IGlkPVwiY2FyZFwiPlxuICA8ZGl2IGlkPVwiaW1hZ2VcIiBjbGFzcz1cImltYWdlXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCh7aW1hZ2V9KTtcIj5cbiAgICA8ZGl2IGlkPVwiaW1hZ2VDb250cm9sbGVyXCI+e2dlbnJlfTwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBpZD1cImNhcmRJbmZvXCIgLz5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICNjYXJkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAjaW1hZ2VDb250cm9sbGVyIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLmltYWdlIHtcbiAgICB3aWR0aDogMTQ1cHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIHNjcm9sbC1zbmFwLWFsaWduOiBjZW50ZXI7XG4gIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICBpbXBvcnQgUmVjdGFuZ2xlQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL1JlY3RhbmdsZUNhcmQuc3ZlbHRlJ1xuICBpbXBvcnQgU3F1YXJlQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL1NxdWFyZUNhcmQuc3ZlbHRlJ1xuICBpbXBvcnQgU3RyaXBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvU3RyaXBDYXJkLnN2ZWx0ZSdcblxuICBleHBvcnQgbGV0IHRhZyA9ICcnLFxuICAgIGhlYWRpbmcsXG4gICAgcmVjdGFuZ2xlQ2FyZCA9IGZhbHNlLFxuICAgIHNxdWFyZUNhcmQgPSBmYWxzZSxcbiAgICBzdHJpcENhcmQgPSBmYWxzZVxuPC9zY3JpcHQ+XG5cbjxkaXYgaWQ9XCJzZWN0aW9uXCI+XG4gIDxoNj57dGFnfTwvaDY+XG4gIDxoMz57aGVhZGluZ308L2gzPlxuICA8ZGl2IGlkPVwic3BvdGxpZ2h0XCI+XG4gICAgeyNpZiByZWN0YW5nbGVDYXJkfVxuICAgICAgPFJlY3RhbmdsZUNhcmRcbiAgICAgICAgaW1hZ2U9XCJodHRwczovL2Nkbi5hcnN0ZWNobmljYS5uZXQvd3AtY29udGVudC91cGxvYWRzLzIwMTkvMTAvb3V0ZXItd29ybGRzLWxpc3RpbmcucG5nXCJcbiAgICAgICAgb3JpZ2luYWxQcmljZT1cIjY5Ljk5XCJcbiAgICAgICAgcmVkdWNlZFByaWNlPVwiNTkuOTlcIiAvPlxuICAgICAgPFJlY3RhbmdsZUNhcmRcbiAgICAgICAgaW1hZ2U9XCJodHRwczovL2kueXRpbWcuY29tL3ZpL2VhVzB0WXB4eXAwL21heHJlc2RlZmF1bHQuanBnXCJcbiAgICAgICAgb3JpZ2luYWxQcmljZT1cIjY5Ljk5XCJcbiAgICAgICAgcmVkdWNlZFByaWNlPVwiNTkuOTlcIiAvPlxuICAgICAgPFJlY3RhbmdsZUNhcmRcbiAgICAgICAgaW1hZ2U9XCJodHRwczovL3N0ZWFtY2RuLWEuYWthbWFpaGQubmV0L3N0ZWFtL2FwcHMvMzc0MzIwL2NhcHN1bGVfNjE2eDM1My5qcGdcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgICA8UmVjdGFuZ2xlQ2FyZFxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vc3RlYW0uY3J5b3RhbmsubmV0L3dwLWNvbnRlbnQvZ2FsbGVyeS9vcmkvT3JpLTAxLUhELnBuZ1wiXG4gICAgICAgIG1hYz1cInRydWVcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgICA8UmVjdGFuZ2xlQ2FyZFxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vaS55dGltZy5jb20vdmkvMmVuYllPTXRSNEkvbWF4cmVzZGVmYXVsdC5qcGdcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgey9pZn1cbiAgICB7I2lmIHNxdWFyZUNhcmR9XG4gICAgICA8U3F1YXJlQ2FyZFxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9jYU5SZFZqSHJBQzhBWGpRd05wNHUwRnpLMnh3S1RNQy0tTVlkYjh4WE5lQ2luandRT0Y4RXFTT2NZQ0MzUkZCZGdqZFwiXG4gICAgICAgIG1hYz1cInRydWVcIlxuICAgICAgICBzdGVhbT1cInRydWVcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgICA8U3F1YXJlQ2FyZFxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vd3d3LmFuZHJvaWRwb2xpY2UuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE4LzEwLzgxTEplQ0R5bE1MLmpwZ1wiXG4gICAgICAgIG1hYz1cInRydWVcIlxuICAgICAgICBzdGVhbT1cInRydWVcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgICA8U3F1YXJlQ2FyZFxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vZW5jcnlwdGVkLXRibjAuZ3N0YXRpYy5jb20vaW1hZ2VzP3E9dGJuJTNBQU5kOUdjUXNyU240LXZBdzZvVVdtWXJ5VkJ0RW5UVVVkNi01ckNRZHpTMXA0SGlrLWRMeE9uT3omdXNxcD1DQVVcIlxuICAgICAgICBtYWM9XCJ0cnVlXCJcbiAgICAgICAgc3RlYW09XCJ0cnVlXCJcbiAgICAgICAgb3JpZ2luYWxQcmljZT1cIjY5Ljk5XCJcbiAgICAgICAgcmVkdWNlZFByaWNlPVwiNTkuOTlcIiAvPlxuICAgICAgPFNxdWFyZUNhcmRcbiAgICAgICAgaW1hZ2U9XCJodHRwczovL2kueXRpbWcuY29tL3ZpL2d2RUNRbHhyaGJ3L21heHJlc2RlZmF1bHQuanBnXCJcbiAgICAgICAgbWFjPVwidHJ1ZVwiXG4gICAgICAgIG9yaWdpbmFsUHJpY2U9XCI2OS45OVwiXG4gICAgICAgIHJlZHVjZWRQcmljZT1cIjU5Ljk5XCIgLz5cbiAgICAgIDxTcXVhcmVDYXJkXG4gICAgICAgIGltYWdlPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxcDlyK0lSb2JMLmpwZ1wiXG4gICAgICAgIG1hYz1cInRydWVcIlxuICAgICAgICBvcmlnaW5hbFByaWNlPVwiNjkuOTlcIlxuICAgICAgICByZWR1Y2VkUHJpY2U9XCI1OS45OVwiIC8+XG4gICAgey9pZn1cbiAgICB7I2lmIHN0cmlwQ2FyZH1cbiAgICAgIDxTdHJpcENhcmRcbiAgICAgICAgZ2VucmU9XCJJbmRpZVwiXG4gICAgICAgIGltYWdlPVwiaHR0cHM6Ly92ZW50dXJlYmVhdC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTIvMDMvam91cm5leS0xLmpwZz93PTEyMDAmc3RyaXA9YWxsXCIgLz5cbiAgICAgIDxTdHJpcENhcmRcbiAgICAgICAgZ2VucmU9XCJBY3Rpb25cIlxuICAgICAgICBpbWFnZT1cImh0dHBzOi8vc3RvcmUtaW1hZ2VzLnMtbWljcm9zb2Z0LmNvbS9pbWFnZS9hcHBzLjM4NjU2LjY5MDM4ODY1MTc5MTUyMTI1LmFmODg1ZmE4LTdiOTQtNDdiMS1iZTNhLWQyYWI2YWY5NWE2YS5hZjgzMTMxZi1kNGRjLTRkNDctYTg0ZC0yNWFhYjkyYTVlNWI/bW9kZT1zY2FsZSZxPTkwJmg9MTA4MCZ3PTE5MjBcIiAvPlxuICAgICAgPFN0cmlwQ2FyZFxuICAgICAgICBnZW5yZT1cIkFkdmVudHVyZVwiXG4gICAgICAgIGltYWdlPVwiaHR0cHM6Ly9hc3NldHMxLmlnbmltZ3MuY29tLzIwMjAvMDMvMjQvaWduLWRvb20tZXRlcm5hbC1jb21wbGV0ZS1yZXZpZXctYmxvZ3JvbGwtMTU4NTA5MjgzMjI5MS5qcGdcIiAvPlxuICAgICAgPFN0cmlwQ2FyZFxuICAgICAgICBnZW5yZT1cIk11bHRpcGxheWVyXCJcbiAgICAgICAgaW1hZ2U9XCJodHRwczovL3N0ZWFtY2RuLWEuYWthbWFpaGQubmV0L2FwcHMvZG90YTIvaW1hZ2VzL2Jsb2cvcGxheS9kb3RhX2hlcm9lcy5wbmdcIiAvPlxuICAgICAgPFN0cmlwQ2FyZFxuICAgICAgICBnZW5yZT1cIkhvcnJvclwiXG4gICAgICAgIGltYWdlPVwiaHR0cHM6Ly9pMi53cC5jb20vdGVjYWtlLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNC80TDJNTGlQblRUNWhNSGJDcWd5akFjLmpwZz9maXQ9MTkyMCUyQzEwODAmc3NsPTFcIiAvPlxuICAgIHsvaWZ9XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgaDYge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICM5MDk5YTE7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gIH1cblxuICBoMyB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAjc2VjdGlvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgfVxuXG4gICNzcG90bGlnaHQge1xuICAgIG1hcmdpbjogMjBweCAwcHg7XG4gICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHNjcm9sbC1zbmFwLXR5cGU6IHggbWFuZGF0b3J5O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgfVxuXG4gICNzcG90bGlnaHQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgaW1wb3J0IE5hdmJhciBmcm9tICcuLi9jb21wb25lbnRzL05hdmJhci5zdmVsdGUnXG4gIGltcG9ydCBUYWJiYXIgZnJvbSAnLi4vY29tcG9uZW50cy9UYWJiYXIuc3ZlbHRlJ1xuICBpbXBvcnQgU3RvcmVTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU3RvcmVTZWN0aW9uLnN2ZWx0ZSdcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT5TdG9yZSA6OiBTdGVhbSBNb2JpbGU8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPE5hdmJhciB0aXRsZT1cIlN0ZWFtIFN0b3JlXCIgLz5cbjxkaXYgaWQ9XCJzdG9yZVwiPlxuICA8U3RvcmVTZWN0aW9uXG4gICAgdGFnPVwiU3BlY2lhbCBPZmZlcnNcIlxuICAgIGhlYWRpbmc9XCJNaWRuaWdodCBNYWRuZXNzXCJcbiAgICByZWN0YW5nbGVDYXJkPVwidHJ1ZVwiIC8+XG4gIDxTdG9yZVNlY3Rpb24gaGVhZGluZz1cIkZlYXR1cmVkICYgUmVjb21tZW5kZWRcIiBzcXVhcmVDYXJkPVwidHJ1ZVwiIC8+XG4gIDxTdG9yZVNlY3Rpb24gaGVhZGluZz1cIlRhZ3NcIiBzdHJpcENhcmQ9XCJ0cnVlXCIgLz5cbjwvZGl2PlxuPFRhYmJhciBsb2NhdGlvbj17MX0gLz5cblxuPHN0eWxlPlxuICAjc3RvcmUge1xuICAgIHBhZGRpbmc6IDkwcHggMzBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xuICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQVlNLEdBQVE7Ozs7OzsrQkFJTixHQUFhOzs7OzhCQUdiLEdBQVk7Ozs7Ozs7Ozs0Q0FQZCxHQUFROzs7Ozs7Ozs7aURBSU4s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
